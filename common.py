from telegram import InlineKeyboardButton, InlineKeyboardMarkup

# –ì–ª–æ–±–∞–ª—å–Ω—ã–µ —Å–ª–æ–≤–∞—Ä–∏ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
user_scores = {}
user_status = {}
user_reports_sent = {}
user_waiting_for_video = {}
user_waiting_for_challenge_video = {}
user_waiting_for_receipt = {}
user_challenges = {}

statuses = ["–ù–æ–≤–∏—á–æ–∫", "–ë—ã–≤–∞–ª—ã–π", "–ß–µ–º–ø–∏–æ–Ω", "–ü—Ä–æ—Ñ–∏"]

def main_menu() -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞–µ—Ç –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –¥–ª—è –±–æ—Ç–∞."""
    return InlineKeyboardMarkup([
        [InlineKeyboardButton("üî• –ü—Ä–æ–π—Ç–∏ –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –∫—É—Ä—Å", callback_data="free_course")],
        [InlineKeyboardButton("üí™ –ß–µ–ª–ª–µ–Ω–¥–∂–∏", callback_data="challenge_menu")],
        [InlineKeyboardButton("üìö –ü–ª–∞—Ç–Ω—ã–π –∫—É—Ä—Å", callback_data="paid_course")],
        [InlineKeyboardButton("üçΩ –ú–µ–Ω—é –ø–∏—Ç–∞–Ω–∏—è", callback_data="nutrition_menu")],
        [InlineKeyboardButton("üë§ –ú–æ–π –∫–∞–±–∏–Ω–µ—Ç", callback_data="my_cabinet")],
        [InlineKeyboardButton("üí° –ö–∞–∫ –∑–∞—Ä–∞–±–æ—Ç–∞—Ç—å –±–∞–ª–ª—ã", callback_data="earn_points")],
        [InlineKeyboardButton("üí∞ –ö–∞–∫ –ø–æ—Ç—Ä–∞—Ç–∏—Ç—å –±–∞–ª–ª—ã", callback_data="spend_points")],
        [InlineKeyboardButton("‚ÑπÔ∏è –û–±–æ –º–Ω–µ", callback_data="about_me")],
        [InlineKeyboardButton("üîó –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞", callback_data="referral")]
    ])

def get_report_button_text(ctx, user_id: int) -> str:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç—á–µ—Ç–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –ø–æ–ª–∞ –∏ –ø—Ä–æ–≥—Ä–∞–º–º—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""
    gender = ctx.user_data[user_id].get("gender", "male")
    prog = ctx.user_data[user_id].get("program", "home")
    return (("üë©" if gender == "female" else "üë®") + ("üè†" if prog == "home" else "üèãÔ∏è") + " –û—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç—á–µ—Ç üìπ")

def update_user_score(user_id: int, points: int):
    """–û–±–Ω–æ–≤–ª—è–µ—Ç –±–∞–ª–ª—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –≥–ª–æ–±–∞–ª—å–Ω–æ–º —Å–ª–æ–≤–∞—Ä–µ."""
    if user_id not in user_scores:
        user_scores[user_id] = 0
    user_scores[user_id] += points

def update_user_status(user_id: int, status_index: int):
    """–û–±–Ω–æ–≤–ª—è–µ—Ç —Å—Ç–∞—Ç—É—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –≥–ª–æ–±–∞–ª—å–Ω–æ–º —Å–ª–æ–≤–∞—Ä–µ."""
    if user_id not in user_status:
        user_status[user_id] = statuses[0]  # –ù–∞—á–∞–ª—å–Ω—ã–π —Å—Ç–∞—Ç—É—Å "–ù–æ–≤–∏—á–æ–∫"
    if status_index < len(statuses):
        user_status[user_id] = statuses[status_index]
