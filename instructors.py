from telegram import Update, InlineKeyboardMarkup, InlineKeyboardButton
from telegram.ext import ContextTypes
from common import user_data, statuses, main_menu, get_report_button_text, logger

async def start_free_course(msg, ctx: ContextTypes.DEFAULT_TYPE, user_id: int):
    instructor = ctx.user_data[user_id]['instructor']
    if not (ctx.user_data[user_id].get("gender") == "female" and ctx.user_data[user_id].get("program") == "home"):
        return await msg.reply_text("–ü–æ–∫–∞ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ üöß", reply_markup=main_menu())
    
    day = user_data[instructor]['current_day'].get(user_id, 1)
    if day > 5:
        return await msg.reply_text("–í—ã –∑–∞–≤–µ—Ä—à–∏–ª–∏ –∫—É—Ä—Å! üéâ", reply_markup=main_menu())
    
    photos = {
        1: "https://github.com/boss198806/telegram-bot/blob/main/IMG_9647.PNG?raw=true",
        2: "https://github.com/boss198806/telegram-bot/blob/main/IMG_9648.PNG?raw=true",
        3: "https://github.com/boss198806/telegram-bot/blob/main/IMG_9649.PNG?raw=true",
        4: "https://github.com/boss198806/telegram-bot/blob/main/IMG_9650.PNG?raw=true",
        5: "https://github.com/boss198806/telegram-bot/blob/main/IMG_9651.PNG?raw=true",
    }
    
    course = {
        1: ["1Ô∏è‚É£ –ü—Ä–∏—Å–µ–¥ —Å –º–∞—Ö–æ–º 3x20 [–í–∏–¥–µ–æ](https://t.me/c/2241417709/363/364)",
            "2Ô∏è‚É£ –Ø–≥–æ–¥–∏—á–Ω—ã–π –º–æ—Å—Ç 3x30 [–í–∏–¥–µ–æ](https://t.me/c/2241417709/381/382)",
            "3Ô∏è‚É£ –í–µ–ª–æ—Å–∏–ø–µ–¥ 3x15 [–í–∏–¥–µ–æ](https://t.me/c/2241417709/278/279)"],
        2: ["1Ô∏è‚É£ –û—Ç–∂–∏–º–∞–Ω–∏—è –æ—Ç –ø–æ–ª–∞ 3x15 [–í–∏–¥–µ–æ](https://t.me/c/2241417709/167/168)",
            "2Ô∏è‚É£ –õ–æ–¥–æ—á–∫–∞ –ø—Ä—è–º—ã–µ —Ä—É–∫–∏ 3x30 [–í–∏–¥–µ–æ](https://t.me/c/2241417709/395/396)",
            "3Ô∏è‚É£ –ü–æ–ª–Ω—ã–µ –ø–æ–¥—ä—ë–º—ã –∫–æ—Ä–ø—É—Å–∞ 3x20 [–í–∏–¥–µ–æ](https://t.me/c/2241417709/274/275)"],
        3: ["1Ô∏è‚É£ –í—ã–ø–∞–¥—ã –Ω–∞–∑–∞–¥ 3x15 [–í–∏–¥–µ–æ](https://t.me/c/2241417709/155/156)",
            "2Ô∏è‚É£ –ú–∞—Ö–∏ –≤ –±–æ–∫ —Å –∫–æ–ª–µ–Ω 3x20 [–í–∏–¥–µ–æ](https://t.me/c/2241417709/385/386)",
            "3Ô∏è‚É£ –ö–æ—Å—ã–µ —Å –∫–∞—Å–∞–Ω–∏–µ–º –ø—è—Ç–æ–∫ 3x15 [–í–∏–¥–µ–æ](https://t.me/c/2241417709/282/283)"],
        4: ["1Ô∏è‚É£ –ü–æ–æ—á–µ—Ä–µ–¥–Ω—ã–µ –ø–æ–¥—ä–µ–º—ã —Å –≥–∞–Ω—Ç–µ–ª—è–º–∏ 4x20 [–í–∏–¥–µ–æ](https://t.me/c/2241417709/226/227)",
            "2Ô∏è‚É£ –£–∑–∫–∏–µ –æ—Ç–∂–∏–º–∞–Ω–∏—è 3x15 [–í–∏–¥–µ–æ](https://t.me/c/2241417709/256/257)",
            "3Ô∏è‚É£ –ü–ª–∞–Ω–∫–∞ 3x1 –º–∏–Ω [–í–∏–¥–µ–æ](https://t.me/c/2241417709/286/296)"],
        5: ["1Ô∏è‚É£ –ü—Ä–∏—Å–µ–¥ —Å–æ —à—Ç–∞–Ω–≥–æ–π (–±–µ–∑ —à—Ç–∞–Ω–≥–∏) 3x20 [–í–∏–¥–µ–æ](https://t.me/c/2241417709/140/141)",
            "2Ô∏è‚É£ –ú–∞—Ö–∏ –ø–æ–¥ 45 —Å —Ä–µ–∑–∏–Ω–∫–æ–π 3x20 [–í–∏–¥–µ–æ](https://t.me/c/2241417709/339/340)",
            "3Ô∏è‚É£ –ü–æ–¥—ä—ë–º—ã –Ω–æ–≥ –ª—ë–∂–∞ 3x15 [–í–∏–¥–µ–æ](https://t.me/c/2241417709/367/368)"],
    }
    
    exercises = course.get(day, [])
    text = f"üî• **–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π –∫—É—Ä—Å: –î–µ–Ω—å {day}** üî•\n\n" + "\n".join(exercises) + "\n\n–û—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∏–¥–µ–æ-–æ—Ç—á–µ—Ç –∑–∞ –¥–µ–Ω—å! üé•"
    kb = InlineKeyboardMarkup([[InlineKeyboardButton(get_report_button_text(ctx, user_id), callback_data=f"send_report_day_{day}")]])
    
    try:
        await ctx.bot.send_photo(chat_id=msg.chat_id, photo=photos.get(day), caption=text, parse_mode="Markdown", reply_markup=kb)
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–æ—Ç–æ: {e}")
        await msg.reply_text("–û—à–∏–±–∫–∞: –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ. –ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –±–µ–∑ —Ñ–æ—Ç–æ.", reply_markup=kb)

async def handle_gender(update: Update, ctx: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    user_id = query.from_user.id
    ctx.user_data.setdefault(user_id, {})["gender"] = "male" if query.data == "gender_male" else "female"
    kb = InlineKeyboardMarkup([
        [InlineKeyboardButton("üè† –î–æ–º–∞", callback_data="program_home"),
        [InlineKeyboardButton("üèãÔ∏è –í –∑–∞–ª–µ", callback_data="program_gym")]
    ])
    await query.message.reply_text("–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É:", reply_markup=kb)

async def handle_program(update: Update, ctx: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    user_id = query.from_user.id
    instructor = ctx.user_data[user_id]['instructor']
    ctx.user_data[user_id]["program"] = "home" if query.data == "program_home" else "gym"
    user_data[instructor]['current_day'][user_id] = 1
    await start_free_course(query.message, ctx, user_id)

async def handle_instructor_selection(update: Update, ctx: ContextTypes.DEFAULT_TYPE, instructor_name: str):
    query = update.callback_query
    user_id = query.from_user.id
    ctx.user_data.setdefault(user_id, {})['instructor'] = instructor_name
    
    if instructor_name == 'evgeniy':
        await ctx.bot.send_video(
            chat_id=query.message.chat_id,
            video="https://t.me/PRIVETSTVIEC/2",
            caption="üé• –ü—Ä–∏–≤–µ—Ç! –Ø —Ç–≤–æ–π —Ñ–∏—Ç–Ω–µ—Å-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç!\n–í—ã –≤—ã–±—Ä–∞–ª–∏ —Ç—Ä–µ–Ω–µ—Ä–∞: –ï–≤–≥–µ–Ω–∏–π –ö—É—Ä–æ—á–∫–∏–Ω",
            reply_markup=main_menu()
        )
    elif instructor_name == 'anastasiya':
        await ctx.bot.send_photo(
            chat_id=query.message.chat_id,
            photo="https://github.com/boss198806/telegram-bot/blob/main/photo_2025-02-08_22-08-36.jpg?raw=true",
            caption="üì∏ –ü—Ä–∏–≤–µ—Ç! –Ø —Ç–≤–æ–π —Ñ–∏—Ç–Ω–µ—Å-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç!\n–í—ã –≤—ã–±—Ä–∞–ª–∏ —Ç—Ä–µ–Ω–µ—Ä–∞: –ê–ù–ê–°–¢–ê–°–ò–Ø",
            reply_markup=main_menu()
        )
