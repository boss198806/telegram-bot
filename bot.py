import os
from dotenv import load_dotenv
from telegram import Update, InlineKeyboardMarkup, InlineKeyboardButton
from telegram.ext import Application, CommandHandler, CallbackQueryHandler, ContextTypes
from evgeniy import start_free_course as evgeniy_start_free_course, handle_send_report as evgeniy_handle_send_report
from anastasia import start_free_course as anastasia_start_free_course, handle_send_report as anastasia_handle_send_report
from common import main_menu

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env —Ñ–∞–π–ª–∞
load_dotenv()

# –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è
TOKEN = os.getenv("TELEGRAM_TOKEN")

# ID –≤–∞—à–µ–≥–æ –≥—Ä—É–ø–ø–æ–≤–æ–≥–æ —á–∞—Ç–∞ (—ç—Ç–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –≥—Ä—É–ø–ø—É)
GROUP_ID = "-1002451371911"

# –§—É–Ω–∫—Ü–∏—è /start –¥–ª—è –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
async def start(update: Update, ctx: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start. –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –∏ –≤—ã–±–æ—Ä —Ç—Ä–µ–Ω–µ—Ä–∞."""
    user_id = update.effective_user.id
    ctx.user_data.setdefault(user_id, {"current_day": 1})
    kb = InlineKeyboardMarkup([
        [InlineKeyboardButton("üî• –ï–≤–≥–µ–Ω–∏–π –ö—É—Ä–æ—á–∫–∏–Ω", callback_data="instructor_1")],
        [InlineKeyboardButton("üí´ –ê–Ω–∞—Å—Ç–∞—Å–∏—è", callback_data="instructor_2")],
        [InlineKeyboardButton("üèãÔ∏è –¢—Ä–µ–Ω–µ—Ä 3", callback_data="instructor_3")],
        [InlineKeyboardButton("ü§º –¢—Ä–µ–Ω–µ—Ä 4", callback_data="instructor_4")],
        [InlineKeyboardButton("ü§∏ –¢—Ä–µ–Ω–µ—Ä 5", callback_data="instructor_5")],
    ])
    await update.message.reply_text("–ü—Ä–∏–≤–µ—Ç! –Ø —Ç–≤–æ–π —Ñ–∏—Ç–Ω–µ—Å-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç! –í—ã–±–µ—Ä–∏—Ç–µ —Ç—Ä–µ–Ω–µ—Ä–∞:", reply_markup=kb)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ —Ç—Ä–µ–Ω–µ—Ä–∞
async def handle_instructor_selection(update: Update, ctx: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ —Ç—Ä–µ–Ω–µ—Ä–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º (–ï–≤–≥–µ–Ω–∏–π –∏–ª–∏ –ê–Ω–∞—Å—Ç–∞—Å–∏—è)."""
    query = update.callback_query
    user_id = query.from_user.id

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—ã–±–æ—Ä —Ç—Ä–µ–Ω–µ—Ä–∞
    if query.data == "instructor_1":
        ctx.user_data[user_id]["instructor"] = "evgeniy"
    elif query.data == "instructor_2":
        ctx.user_data[user_id]["instructor"] = "anastasia"
    else:
        ctx.user_data[user_id]["instructor"] = query.data  # –î–ª—è –¥—Ä—É–≥–∏—Ö —Ç—Ä–µ–Ω–µ—Ä–æ–≤

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –º–µ–Ω—é –¥–ª—è –≤—ã–±–æ—Ä–∞ –∫—É—Ä—Å–∞ –∏ –¥—Ä—É–≥–∏—Ö –æ–ø—Ü–∏–π
    kb = InlineKeyboardMarkup([
        [InlineKeyboardButton("üî• –ü—Ä–æ–π—Ç–∏ –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –∫—É—Ä—Å", callback_data="free_course")],
        [InlineKeyboardButton("üí™ –ß–µ–ª–ª–µ–Ω–¥–∂–∏", callback_data="challenge_menu")],
        [InlineKeyboardButton("üìö –ü–ª–∞—Ç–Ω—ã–π –∫—É—Ä—Å", callback_data="paid_course")],
        [InlineKeyboardButton("üçΩ –ú–µ–Ω—é –ø–∏—Ç–∞–Ω–∏—è", callback_data="nutrition_menu")],
        [InlineKeyboardButton("üë§ –ú–æ–π –∫–∞–±–∏–Ω–µ—Ç", callback_data="my_cabinet")],
        [InlineKeyboardButton("üí° –ö–∞–∫ –∑–∞—Ä–∞–±–æ—Ç–∞—Ç—å –±–∞–ª–ª—ã", callback_data="earn_points")],
        [InlineKeyboardButton("üí∞ –ö–∞–∫ –ø–æ—Ç—Ä–∞—Ç–∏—Ç—å –±–∞–ª–ª—ã", callback_data="spend_points")],
        [InlineKeyboardButton("‚ÑπÔ∏è –û–±–æ –º–Ω–µ", callback_data="about_me")],
        [InlineKeyboardButton("üîó –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞", callback_data="referral")]
    ])
    
    await query.message.edit_text("–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é:", reply_markup=kb)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–æ–∫ –¥–ª—è –∫—É—Ä—Å–∞
async def handle_course_selection(update: Update, ctx: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –∫—É—Ä—Å–∞ (–±–µ—Å–ø–ª–∞—Ç–Ω—ã–π, –ø–ª–∞—Ç–Ω—ã–π, —á–µ–ª–ª–µ–Ω–¥–∂–∏)."""
    query = update.callback_query
    user_id = query.from_user.id
    choice = query.data

    if choice == "free_course":
        # –õ–æ–≥–∏–∫–∞ –¥–ª—è –±–µ—Å–ø–ª–∞—Ç–Ω–æ–≥–æ –∫—É—Ä—Å–∞
        if ctx.user_data[user_id]["instructor"] == "evgeniy":
            await evgeniy_start_free_course(query.message, ctx, user_id)
        else:
            await anastasia_start_free_course(query.message, ctx, user_id)

    elif choice == "paid_course":
        # –õ–æ–≥–∏–∫–∞ –¥–ª—è –ø–ª–∞—Ç–Ω–æ–≥–æ –∫—É—Ä—Å–∞
        await query.message.reply_text("–í—ã –≤—ã–±—Ä–∞–ª–∏ –ø–ª–∞—Ç–Ω—ã–π –∫—É—Ä—Å. –û–∂–∏–¥–∞–π—Ç–µ!")
    
    elif choice == "challenge_menu":
        # –õ–æ–≥–∏–∫–∞ –¥–ª—è —á–µ–ª–ª–µ–Ω–¥–∂–µ–π
        await query.message.reply_text("–í—ã –≤—ã–±—Ä–∞–ª–∏ —á–µ–ª–ª–µ–Ω–¥–∂–∏. –û–∂–∏–¥–∞–π—Ç–µ!")

    elif choice == "nutrition_menu":
        # –õ–æ–≥–∏–∫–∞ –¥–ª—è –º–µ–Ω—é –ø–∏—Ç–∞–Ω–∏—è
        await handle_nutrition_menu(update, ctx)
    
    elif choice == "referral":
        # –õ–æ–≥–∏–∫–∞ –¥–ª—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–∏
        await handle_referral(update, ctx)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –º–µ–Ω—é –ø–∏—Ç–∞–Ω–∏—è
async def handle_nutrition_menu(update: Update, ctx: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ –ú–µ–Ω—é –ø–∏—Ç–∞–Ω–∏—è."""
    query = update.callback_query
    kb = InlineKeyboardMarkup([
        [InlineKeyboardButton("üç¥ –ö—É–ø–∏—Ç—å –º–µ–Ω—é –ø–∏—Ç–∞–Ω–∏—è –∑–∞ 300 –±–∞–ª–ª–æ–≤", callback_data="buy_nutrition_menu")],
        [InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data="back")]
    ])
    await query.message.reply_text("–ú–µ–Ω—é –ø–∏—Ç–∞–Ω–∏—è –¥–æ—Å—Ç—É–ø–Ω–æ –¥–ª—è –ø–æ–∫—É–ø–∫–∏:", reply_markup=kb)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–∏
async def handle_referral(update: Update, ctx: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞."""
    query = update.callback_query
    user_id = query.from_user.id
    me = await ctx.bot.get_me()
    link = f"https://t.me/{me.username}?start={user_id}"
    await query.message.reply_text(f"üîó –í–∞—à–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞:\n{link}\n\n–ü–æ–¥–µ–ª–∏—Ç–µ—Å—å –µ—é —Å –¥—Ä—É–∑—å—è–º–∏, –∏ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ 100 –±–∞–ª–ª–æ–≤! üéâ")

# –ì–ª–∞–≤–Ω—ã–π –ø—Ä–æ—Ü–µ—Å—Å –±–æ—Ç–∞
def main():
    """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ –∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤."""
    app = Application.builder().token(TOKEN).build()

    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥ –∏ –∑–∞–ø—Ä–æ—Å–æ–≤
    app.add_handler(CommandHandler("start", start))  # –ö–æ–º–∞–Ω–¥–∞ /start
    app.add_handler(CallbackQueryHandler(handle_instructor_selection, pattern="^instructor_"))  # –í—ã–±–æ—Ä —Ç—Ä–µ–Ω–µ—Ä–∞
    app.add_handler(CallbackQueryHandler(handle_course_selection, pattern="^(free_course|paid_course|challenge_menu|nutrition_menu|referral)$"))  # –í—ã–±–æ—Ä –∫—É—Ä—Å–∞
    app.add_handler(CallbackQueryHandler(handle_nutrition_menu, pattern="^buy_nutrition_menu$"))  # –ü–æ–∫—É–ø–∫–∞ –º–µ–Ω—é –ø–∏—Ç–∞–Ω–∏—è

    # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ –Ω–∞ –ø–æ–ª–ª–∏–Ω–≥–µ
    app.run_polling()

if __name__ == "__main__":
    main()
