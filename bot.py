import logging
from telegram import Update, InlineKeyboardMarkup, InlineKeyboardButton
from telegram.ext import Application, CommandHandler, CallbackQueryHandler, MessageHandler, filters, ContextTypes


# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format="%(asctime)s - %(name)s - %(levelname)s - %(message)s",
    level=logging.INFO
)
logger = logging.getLogger(__name__)


TOKEN = "7761949562:AAF-zTgYwd5rzETyr3OnAGCGxrSQefFuKZs"
GROUP_ID = "-1002451371911"
PHOTO_PATH = "https://github.com/boss198806/telegram-bot/blob/main/Photo.jpg"  # –£–∫–∞–∂–∏—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø—É—Ç—å –∫ —Ñ–æ—Ç–æ


# –°–ª–æ–≤–∞—Ä–∏ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
user_scores = {}
user_status = {}
user_reports_sent = {}
user_waiting_for_video = {}  # –î–ª—è –±–µ—Å–ø–ª–∞—Ç–Ω–æ–≥–æ –∫—É—Ä—Å–∞
user_waiting_for_challenge_video = {}  # –î–ª—è —á–µ–ª–ª–µ–Ω–¥–∂–µ–π
user_waiting_for_receipt = {}
user_challenges = {}


# –°—Ç–∞—Ç—É—Å—ã
statuses = ["–ù–æ–≤–∏—á–æ–∫", "–ë—ã–≤–∞–ª—ã–π", "–ß–µ–º–ø–∏–æ–Ω", "–ü—Ä–æ—Ñ–∏"]


# –ö–æ–º–∞–Ω–¥–∞ /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    try:
        user_id = update.effective_user.id
        args = context.args  # –ü–æ–ª—É—á–∞–µ–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã (–µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–∏—à–µ–ª –ø–æ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–µ)

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥ –≤ —Å—Å—ã–ª–∫–µ
        if args and args[0].startswith("ref_"):
            referrer_id = int(args[0].split("_")[1])  # –ü–æ–ª—É—á–∞–µ–º ID –ø—Ä–∏–≥–ª–∞—Å–∏–≤—à–µ–≥–æ

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ–±—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –ø–æ–ª—É—á–∞–ª –±–æ–Ω—É—Å –¥–≤–∞–∂–¥—ã –∏ –Ω–µ —Å–∞–º —Å–µ–±–µ
            if referrer_id != user_id and user_id not in user_scores:
                user_scores[referrer_id] = user_scores.get(referrer_id, 0) + 300  # –ù–∞—á–∏—Å–ª—è–µ–º 300 –±–∞–ª–ª–æ–≤

                # –£–≤–µ–¥–æ–º–ª—è–µ–º –ø—Ä–∏–≥–ª–∞—Å–∏–≤—à–µ–≥–æ –æ –Ω–∞—á–∏—Å–ª–µ–Ω–∏–∏ –±–∞–ª–ª–æ–≤
                await context.bot.send_message(
                    chat_id=referrer_id,
                    text=f"üéâ –í—ã –ø—Ä–∏–≥–ª–∞—Å–∏–ª–∏ –Ω–æ–≤–æ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞! –í–∞–º –Ω–∞—á–∏—Å–ª–µ–Ω–æ 300 –±–∞–ª–ª–æ–≤. –í—Å–µ–≥–æ —É –≤–∞—Å: {user_scores[referrer_id]} –±–∞–ª–ª–æ–≤."
                )

        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        context.chat_data[user_id] = {"current_day": 1}
        user_scores[user_id] = user_scores.get(user_id, 0)  # –û–±–Ω—É–ª—è–µ–º –±–∞–ª–ª—ã, –µ—Å–ª–∏ –Ω–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
        user_status[user_id] = statuses[0]

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        await context.bot.send_photo(
            chat_id=update.effective_chat.id,
            photo=open(PHOTO_PATH, 'rb'),
            caption="–ü—Ä–∏–≤–µ—Ç! –Ø —Ç–≤–æ–π —Ñ–∏—Ç–Ω–µ—Å-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç! –ü–æ–º–æ–≥—É —Å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞–º–∏, –º–æ—Ç–∏–≤–∞—Ü–∏–µ–π –∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ–º —Ü–µ–ª–µ–π.\n\n"
                    "–ü—Ä–∏–≥–ª–∞—à–∞–π –¥—Ä—É–∑–µ–π –∏ –ø–æ–ª—É—á–∞–π 300 –±–∞–ª–ª–æ–≤ –∑–∞ –∫–∞–∂–¥–æ–≥–æ! üéâ\n\n"
                    f"–¢–≤–æ—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞:\nhttps://t.me/{context.bot.username}?start=ref_{user_id}",
            reply_markup=main_menu()
        )

    except FileNotFoundError:
        logger.error(f"–§–∞–π–ª {PHOTO_PATH} –Ω–µ –Ω–∞–π–¥–µ–Ω.")
        await update.message.reply_text("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ /start: {e}")
        await update.message.reply_text("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
def main_menu():
    buttons = [
        [InlineKeyboardButton("üî• –ü—Ä–æ–π—Ç–∏ –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –∫—É—Ä—Å", callback_data="free_course")],
        [InlineKeyboardButton("üí™ –ß–µ–ª–ª–µ–Ω–¥–∂–∏", callback_data="start_challenge")],
        [InlineKeyboardButton("üìö –ü–ª–∞—Ç–Ω—ã–π –∫—É—Ä—Å", callback_data="paid_course")],
        [InlineKeyboardButton("üçΩ –ú–µ–Ω—é –ø–∏—Ç–∞–Ω–∏—è", callback_data="nutrition_menu")],  # –ù–æ–≤–∞—è –∫–Ω–æ–ø–∫–∞
        [InlineKeyboardButton("üë§ –ú–æ–π –∫–∞–±–∏–Ω–µ—Ç", callback_data="my_cabinet")],
        [InlineKeyboardButton("üí° –ö–∞–∫ –∑–∞—Ä–∞–±–æ—Ç–∞—Ç—å –±–∞–ª–ª—ã", callback_data="earn_points")],
        [InlineKeyboardButton("üí∞ –ö–∞–∫ –ø–æ—Ç—Ä–∞—Ç–∏—Ç—å –±–∞–ª–ª—ã", callback_data="spend_points")],
        [InlineKeyboardButton("‚ÑπÔ∏è –û–±–æ –º–Ω–µ", callback_data="about_me")],
    ]
    return InlineKeyboardMarkup(buttons)




# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ú–µ–Ω—é –ø–∏—Ç–∞–Ω–∏—è"
async def handle_nutrition_menu(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    user_id = query.from_user.id
    user_score = user_scores.get(user_id, 0)


    if user_score >= 300:
        # –°–ø–∏—Å—ã–≤–∞–µ–º –±–∞–ª–ª—ã
        user_scores[user_id] -= 300


        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å—Å—ã–ª–∫—É
        await query.message.reply_text(
            "‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ –º–µ–Ω—é –ø–∏—Ç–∞–Ω–∏—è!\n"
            "–ü–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø: https://t.me/+Vp37EiVi_S0zN2Ji"
        )
    else:
        await query.message.reply_text(
            "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –±–∞–ª–ª–æ–≤ –¥–ª—è –ø–æ–∫—É–ø–∫–∏ –º–µ–Ω—é –ø–∏—Ç–∞–Ω–∏—è. "
            f"–£ –≤–∞—Å {user_score} –±–∞–ª–ª–æ–≤, –∞ –Ω—É–∂–Ω–æ 300."
        )




# –ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π –∫—É—Ä—Å —Å —Ñ–æ—Ç–æ –∏ –≤–∏–¥–µ–æ-—Å—Å—ã–ª–∫–∞–º–∏
async def handle_free_course(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    user_id = query.from_user.id

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if user_id not in context.user_data:
        context.user_data[user_id] = {"current_day": 1}

    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∞–ª "–°–ª–µ–¥—É—é—â–∏–π –¥–µ–Ω—å", —É–≤–µ–ª–∏—á–∏–≤–∞–µ–º current_day
    if query.data == "next_day":
        context.user_data[user_id]["current_day"] += 1

    # –¢–µ–ø–µ—Ä—å –ø–æ–ª—É—á–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π current_day
    current_day = context.user_data[user_id]["current_day"]

    if current_day > 5:
        await query.message.reply_text(
            "–í—ã –∑–∞–≤–µ—Ä—à–∏–ª–∏ –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –∫—É—Ä—Å! –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! üéâ",
            reply_markup=main_menu()
        )
        return

    # –ü—É—Ç–∏ –∫ —Ñ–æ—Ç–æ (–æ—Å—Ç–∞—é—Ç—Å—è –ø—Ä–∏–≤—è–∑–∞–Ω—ã –∫ —Å–≤–æ–∏–º –¥–Ω—è–º)
    photo_paths = {
        1: "https://github.com/boss198806/telegram-bot/blob/main/IMG_9647.PNG",  
        2: "https://github.com/boss198806/telegram-bot/blob/main/IMG_9648.PNG",  
        3: "Dhttps://github.com/boss198806/telegram-bot/blob/main/IMG_9649.PNG",  
        4: "https://github.com/boss198806/telegram-bot/blob/main/IMG_9650.PNG",  
        5: "https://github.com/boss198806/telegram-bot/blob/main/IMG_9651.PNG"  
    }

    # –ü—Ä–æ–≥—Ä–∞–º–º–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ (–ø–µ—Ä–µ—Å—Ç–∞–≤–ª–µ–Ω—ã —Ç–æ–ª—å–∫–æ –¥–Ω–∏ 4 –∏ 5)
    course_program = {
        1: [
            "1Ô∏è‚É£ –ü—Ä–∏—Å–µ–¥ —Å –º–∞—Ö–æ–º 3x20 [–í–∏–¥–µ–æ](https://t.me/c/2241417709/363/364)",
            "2Ô∏è‚É£ –Ø–≥–æ–¥–∏—á–Ω—ã–π –º–æ—Å—Ç 3x30 [–í–∏–¥–µ–æ](https://t.me/c/2241417709/381/382)",
            "3Ô∏è‚É£ –í–µ–ª–æ—Å–∏–ø–µ–¥ 3x15 –Ω–∞ –∫–∞–∂–¥—É—é –Ω–æ–≥—É [–í–∏–¥–µ–æ](https://t.me/c/2241417709/278/279)"
        ],
        2: [
            "1Ô∏è‚É£ –û—Ç–∂–∏–º–∞–Ω–∏—è –æ—Ç –ø–æ–ª–∞ 3x15 [–í–∏–¥–µ–æ](https://t.me/c/2241417709/167/168)",
            "2Ô∏è‚É£ –õ–æ–¥–æ—á–∫–∞ –ø—Ä—è–º—ã–µ —Ä—É–∫–∏ 3x30 [–í–∏–¥–µ–æ](https://t.me/c/2241417709/395/396)",
            "3Ô∏è‚É£ –ü–æ–ª–Ω—ã–µ –ø–æ–¥—ä—ë–º—ã –∫–æ—Ä–ø—É—Å–∞ 3x20 [–í–∏–¥–µ–æ](https://t.me/c/2241417709/274/275)"
        ],
        3: [
            "1Ô∏è‚É£ –í—ã–ø–∞–¥—ã –Ω–∞–∑–∞–¥ 3x15 [–í–∏–¥–µ–æ](https://t.me/c/2241417709/155/156)",
            "2Ô∏è‚É£ –ú–∞—Ö–∏ –≤ –±–æ–∫ —Å –∫–æ–ª–µ–Ω 3x20 (–º–æ–∂–Ω–æ –±–µ–∑ —Ä–µ–∑–∏–Ω–∫–∏) [–í–∏–¥–µ–æ](https://t.me/c/2241417709/385/386)",
            "3Ô∏è‚É£ –ö–æ—Å—ã–µ —Å –∫–∞—Å–∞–Ω–∏–µ–º –ø—è—Ç–æ–∫ 3x15 –Ω–∞ –∫–∞–∂–¥—É—é [–í–∏–¥–µ–æ](https://t.me/c/2241417709/282/283)"
        ],
        4: [  # –¢–µ–ø–µ—Ä—å —Ç—É—Ç —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è —Å 5-–≥–æ –¥–Ω—è, –Ω–æ —Ñ–æ—Ç–æ –æ—Å—Ç–∞–µ—Ç—Å—è –æ—Ç 4-–≥–æ –¥–Ω—è
            "1Ô∏è‚É£ –ü–æ–æ—á–µ—Ä–µ–¥–Ω—ã–µ –ø–æ–¥—ä–µ–º—ã —Å –≥–∞–Ω—Ç–µ–ª—è–º–∏ –≤ —Ä–∞–∑–≤–æ—Ä–æ—Ç–µ 4x20 [–í–∏–¥–µ–æ](https://t.me/c/2241417709/226/227)",
            "2Ô∏è‚É£ –£–∑–∫–∏–µ –æ—Ç–∂–∏–º–∞–Ω–∏—è 3x15 [–í–∏–¥–µ–æ](https://t.me/c/2241417709/256/257)",
            "3Ô∏è‚É£ –ü–ª–∞–Ω–∫–∞ 3x1 –º–∏–Ω [–í–∏–¥–µ–æ](https://t.me/c/2241417709/286/296)"
        ],
        5: [  # –¢–µ–ø–µ—Ä—å —Ç—É—Ç —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è —Å 4-–≥–æ –¥–Ω—è, –Ω–æ —Ñ–æ—Ç–æ –æ—Å—Ç–∞–µ—Ç—Å—è –æ—Ç 5-–≥–æ –¥–Ω—è
            "1Ô∏è‚É£ –ü—Ä–∏—Å–µ–¥ —Å–æ —à—Ç–∞–Ω–≥–æ–π (–±–µ–∑ —à—Ç–∞–Ω–≥–∏) 3x20 [–í–∏–¥–µ–æ](https://t.me/c/2241417709/140/141)",
            "2Ô∏è‚É£ –ú–∞—Ö–∏ –ø–æ–¥ 45 —Å —Ä–µ–∑–∏–Ω–∫–æ–π (–º–æ–∂–Ω–æ –±–µ–∑ –Ω–µ–µ) 3x20 [–í–∏–¥–µ–æ](https://t.me/c/2241417709/339/340)",
            "3Ô∏è‚É£ –ü–æ–¥—ä—ë–º—ã –Ω–æ–≥ –ª—ë–∂–∞ 3x15 [–í–∏–¥–µ–æ](https://t.me/c/2241417709/367/368)"
        ]
    }

    exercises = course_program.get(current_day, [])
    caption = f"üî• **–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π –∫—É—Ä—Å: –î–µ–Ω—å {current_day}** üî•\n\n" + "\n".join(exercises) + "\n\n–û—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∏–¥–µ–æ-–æ—Ç—á–µ—Ç –∑–∞ –¥–µ–Ω—å, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –±–∞–ª–ª—ã!"

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ñ–æ—Ç–æ
    photo_path = photo_paths.get(current_day)
    try:
        with open(photo_path, "rb") as photo:
            await context.bot.send_photo(
                chat_id=update.effective_chat.id,
                photo=photo,
                caption=caption,
                parse_mode="Markdown",
                reply_markup=InlineKeyboardMarkup(
                    [[InlineKeyboardButton("–û—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç—á–µ—Ç", callback_data=f"send_report_day_{current_day}")]]
                )
            )
    except FileNotFoundError:
        logger.error(f"–§–∞–π–ª {photo_path} –Ω–µ –Ω–∞–π–¥–µ–Ω.")
        await query.message.reply_text(
            "–û—à–∏–±–∫–∞: –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ. –ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –±–µ–∑ —Ñ–æ—Ç–æ.",
            reply_markup=InlineKeyboardMarkup(
                [[InlineKeyboardButton("–û—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç—á–µ—Ç", callback_data=f"send_report_day_{current_day}")]]
            )
        )
# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–û—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç—á–µ—Ç" –¥–ª—è –±–µ—Å–ø–ª–∞—Ç–Ω–æ–≥–æ –∫—É—Ä—Å–∞
async def handle_send_report(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    user_id = query.from_user.id
    current_day = int(query.data.split("_")[-1])  # –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–µ–Ω—å –∏–∑ callback_data


    if user_reports_sent.get(user_id, {}).get(current_day):
        await query.message.reply_text(f"–í—ã —É–∂–µ –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –æ—Ç—á–µ—Ç –∑–∞ –¥–µ–Ω—å {current_day}.")
        return


    user_waiting_for_video[user_id] = current_day
    await query.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∏–¥–µ–æ-–æ—Ç—á–µ—Ç –∑–∞ —Ç–µ–∫—É—â–∏–π –¥–µ–Ω—å.")


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–∏–¥–µ–æ
async def handle_video(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.message.from_user.id
    user_name = update.message.from_user.first_name


    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç—á–µ—Ç–æ–≤ –¥–ª—è –±–µ—Å–ø–ª–∞—Ç–Ω–æ–≥–æ –∫—É—Ä—Å–∞
    if user_id in user_waiting_for_video:
        current_day = user_waiting_for_video[user_id]


        await context.bot.send_message(
            chat_id=GROUP_ID,
            text=f"–í–∏–¥–µ–æ-–æ—Ç—á–µ—Ç –æ—Ç {user_name} (ID: {user_id}) –∑–∞ –¥–µ–Ω—å {current_day}."
        )
        await context.bot.send_video(
            chat_id=GROUP_ID,
            video=update.message.video.file_id
        )


        user_reports_sent.setdefault(user_id, {})[current_day] = True
        user_scores[user_id] += 60
        del user_waiting_for_video[user_id]


        if current_day < 5:
            context.chat_data[user_id]["current_day"] += 1
            await update.message.reply_text(
                f"–û—Ç—á–µ—Ç –∑–∞ –¥–µ–Ω—å {current_day} –ø—Ä–∏–Ω—è—Ç! üéâ\n"
                f"–í–∞—à–∏ –±–∞–ª–ª—ã: {user_scores[user_id]}.\n"
                "–ü–µ—Ä–µ—Ö–æ–¥ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É –¥–Ω—é.",
                reply_markup=InlineKeyboardMarkup(
                    [[InlineKeyboardButton("–°–ª–µ–¥—É—é—â–∏–π –¥–µ–Ω—å", callback_data="free_course")]]
                )
            )
        else:
            user_status[user_id] = statuses[1]
            await update.message.reply_text(
                f"–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã –∑–∞–≤–µ—Ä—à–∏–ª–∏ –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –∫—É—Ä—Å! üéâ\n"
                f"–í–∞—à–∏ –±–∞–ª–ª—ã: {user_scores[user_id]}.",
                reply_markup=main_menu()
            )


    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç—á–µ—Ç–æ–≤ –¥–ª—è —á–µ–ª–ª–µ–Ω–¥–∂–µ–π
    elif user_id in user_waiting_for_challenge_video:
        await context.bot.send_message(
            chat_id=GROUP_ID,
            text=f"–í–∏–¥–µ–æ-–æ—Ç—á–µ—Ç –æ—Ç {user_name} (ID: {user_id}) –∑–∞ —á–µ–ª–ª–µ–Ω–¥–∂."
        )
        await context.bot.send_video(
            chat_id=GROUP_ID,
            video=update.message.video.file_id
        )


        user_scores[user_id] += 60
        del user_waiting_for_challenge_video[user_id]
        await update.message.reply_text(
            f"–û—Ç—á–µ—Ç –∑–∞ —á–µ–ª–ª–µ–Ω–¥–∂ –ø—Ä–∏–Ω—è—Ç! üéâ\n"
            f"–í–∞—à–∏ –±–∞–ª–ª—ã: {user_scores[user_id]}."
        )


    else:
        await update.message.reply_text("–Ø –Ω–µ –∂–¥—É –≤–∏–¥–µ–æ. –í—ã–±–µ—Ä–∏—Ç–µ –∑–∞–¥–∞–Ω–∏–µ –≤ –º–µ–Ω—é.")


# –ß–µ–ª–ª–µ–Ω–¥–∂–∏
async def handle_challenges(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    user_id = query.from_user.id


    if user_challenges.get(user_id):
        # –ï—Å–ª–∏ –¥–æ—Å—Ç—É–ø —É–∂–µ –∫—É–ø–ª–µ–Ω, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–¥–∞–Ω–∏–µ –∏ –ø—Ä–æ—Å–∏–º –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç—á–µ—Ç
        await query.message.reply_text(
            "–í–∞—à–µ –∑–∞–¥–∞–Ω–∏–µ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è:\n"
            "1Ô∏è‚É£ –ë–µ–≥ 5 –∫–º\n"
            "2Ô∏è‚É£ –ü–ª–∞–Ω–∫–∞ 3 –º–∏–Ω—É—Ç—ã\n"
            "3Ô∏è‚É£ –ü–æ–¥—Ç—è–≥–∏–≤–∞–Ω–∏—è 3x10\n\n"
            "–û—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∏–¥–µ–æ-–æ—Ç—á–µ—Ç, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å 60 –±–∞–ª–ª–æ–≤!",
            reply_markup=InlineKeyboardMarkup(
                [[InlineKeyboardButton("–û—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç—á–µ—Ç", callback_data="send_challenge_report")]]
            )
        )
    else:
        if user_scores.get(user_id, 0) >= 300:
            buttons = [
                [InlineKeyboardButton("–ö—É–ø–∏—Ç—å –¥–æ—Å—Ç—É–ø –∑–∞ 300 –±–∞–ª–ª–æ–≤", callback_data="buy_challenge")],
                [InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data="back")]
            ]
            await query.message.reply_text(
                "–î–æ—Å—Ç—É–ø –∫ —á–µ–ª–ª–µ–Ω–¥–∂–∞–º —Å—Ç–æ–∏—Ç 300 –±–∞–ª–ª–æ–≤. –•–æ—Ç–∏—Ç–µ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏?",
                reply_markup=InlineKeyboardMarkup(buttons)
            )
        else:
            await query.message.reply_text(
                "–î–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —á–µ–ª–ª–µ–Ω–¥–∂–∞–º –Ω—É–∂–Ω–æ 300 –±–∞–ª–ª–æ–≤. "
                f"–£ –≤–∞—Å {user_scores.get(user_id, 0)} –±–∞–ª–ª–æ–≤. "
                "–ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏!"
            )


# –ü–æ–∫—É–ø–∫–∞ —á–µ–ª–ª–µ–Ω–¥–∂–∞
async def buy_challenge(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    user_id = query.from_user.id


    if user_scores.get(user_id, 0) >= 300:
        user_scores[user_id] -= 300
        user_challenges[user_id] = True


        # –ü–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏ —Å—Ä–∞–∑—É –≤—ã–¥–∞–µ–º –∑–∞–¥–∞–Ω–∏–µ –∏ –ø—Ä–æ—Å–∏–º –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç—á–µ—Ç
        await query.message.reply_text(
            "‚úÖ –î–æ—Å—Ç—É–ø –∫ —á–µ–ª–ª–µ–Ω–¥–∂–∞–º –æ—Ç–∫—Ä—ã—Ç!\n\n"
            "–í–∞—à–µ –∑–∞–¥–∞–Ω–∏–µ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è:\n"
            "1Ô∏è‚É£ –ë–µ–≥ 5 –∫–º\n"
            "2Ô∏è‚É£ –ü–ª–∞–Ω–∫–∞ 3 –º–∏–Ω—É—Ç—ã\n"
            "3Ô∏è‚É£ –ü–æ–¥—Ç—è–≥–∏–≤–∞–Ω–∏—è 3x10\n\n"
            "–û—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∏–¥–µ–æ-–æ—Ç—á–µ—Ç, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å 60 –±–∞–ª–ª–æ–≤!",
            reply_markup=InlineKeyboardMarkup(
                [[InlineKeyboardButton("–û—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç—á–µ—Ç", callback_data="send_challenge_report")]]
            )
        )
    else:
        await query.message.reply_text("–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –±–∞–ª–ª–æ–≤ –¥–ª—è –ø–æ–∫—É–ø–∫–∏ –¥–æ—Å—Ç—É–ø–∞!")


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç—á–µ—Ç–∞ –¥–ª—è —á–µ–ª–ª–µ–Ω–¥–∂–∞
async def handle_video(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.message.from_user.id
    user_name = update.message.from_user.first_name

    if user_id in user_waiting_for_video:
        current_day = user_waiting_for_video[user_id]

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤–∏–¥–µ–æ –≤ –≥—Ä—É–ø–ø—É
        await context.bot.send_message(
            chat_id=GROUP_ID,
            text=f"üìπ –í–∏–¥–µ–æ-–æ—Ç—á–µ—Ç –æ—Ç {user_name} (ID: {user_id}) –∑–∞ –¥–µ–Ω—å {current_day}."
        )
        await context.bot.send_video(
            chat_id=GROUP_ID,
            video=update.message.video.file_id
        )

        user_reports_sent.setdefault(user_id, {})[current_day] = True
        user_scores[user_id] += 60

        # –£–¥–∞–ª—è–µ–º user_waiting_for_video (–Ω–æ –¥–µ–Ω—å –Ω–µ —É–≤–µ–ª–∏—á–∏–≤–∞–µ–º –∑–¥–µ—Å—å!)
        del user_waiting_for_video[user_id]

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –ø–æ—Å–ª–µ–¥–Ω–∏–π –ª–∏ –¥–µ–Ω—å
        if current_day < 5:
            await update.message.reply_text(
                f"‚úÖ –û—Ç—á–µ—Ç –∑–∞ –¥–µ–Ω—å {current_day} –ø—Ä–∏–Ω—è—Ç!\n"
                f"üéâ –í–∞—à–∏ –±–∞–ª–ª—ã: {user_scores[user_id]}.\n"
                f"üîú –ì–æ—Ç–æ–≤—ã –∫ —Å–ª–µ–¥—É—é—â–µ–º—É –¥–Ω—é ({current_day + 1})?",
                reply_markup=InlineKeyboardMarkup(
                    [[InlineKeyboardButton(f"‚û° –ü–µ—Ä–µ–π—Ç–∏ –∫–æ –¥–Ω—é {current_day + 1}", callback_data="next_day")]]
                )
            )
        else:
            user_status[user_id] = statuses[1]
            await update.message.reply_text(
                f"üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã –∑–∞–≤–µ—Ä—à–∏–ª–∏ –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –∫—É—Ä—Å!\n"
                f"üèÜ –í–∞—à–∏ –±–∞–ª–ª—ã: {user_scores[user_id]}.",
                reply_markup=main_menu()
            )
    else:
        await update.message.reply_text("‚ùå –Ø –Ω–µ –∂–¥—É –≤–∏–¥–µ–æ. –í—ã–±–µ—Ä–∏—Ç–µ –∑–∞–¥–∞–Ω–∏–µ –≤ –º–µ–Ω—é.")
# –ü–æ–∫—É–ø–∫–∞ —á–µ–ª–ª–µ–Ω–¥–∂–∞
async def buy_challenge(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    user_id = query.from_user.id


    if user_scores.get(user_id, 0) >= 300:
        user_scores[user_id] -= 300
        user_challenges[user_id] = True
        await query.message.reply_text(
            "‚úÖ –î–æ—Å—Ç—É–ø –∫ —á–µ–ª–ª–µ–Ω–¥–∂–∞–º –æ—Ç–∫—Ä—ã—Ç!\n"
            "–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –æ—Ç—á–µ—Ç—ã –∏ –ø–æ–ª—É—á–∞—Ç—å –±–∞–ª–ª—ã!"
        )
    else:
        await query.message.reply_text("–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –±–∞–ª–ª–æ–≤ –¥–ª—è –ø–æ–∫—É–ø–∫–∏ –¥–æ—Å—Ç—É–ø–∞!")


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç—á–µ—Ç–∞ –¥–ª—è —á–µ–ª–ª–µ–Ω–¥–∂–∞
async def send_challenge_report(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    user_id = query.from_user.id
    user_waiting_for_challenge_video[user_id] = True
    await query.message.reply_text("–û—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∏–¥–µ–æ-–æ—Ç—á–µ—Ç –¥–ª—è —á–µ–ª–ª–µ–Ω–¥–∂–∞:")


# –ü–ª–∞—Ç–Ω—ã–π –∫—É—Ä—Å
async def handle_paid_course(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    user_id = query.from_user.id
    discount = min(user_scores.get(user_id, 0) * 2, 600)  # –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å–∫–∏–¥–∫–∞ 30% –æ—Ç 2000
    final_price = 2000 - discount


    await query.message.reply_text(
        f"–ü–ª–∞—Ç–Ω—ã–π –∫—É—Ä—Å —Å—Ç–æ–∏—Ç 2000 —Ä—É–±–ª–µ–π.\n"
        f"–í–∞—à–∞ —Å–∫–∏–¥–∫–∞: {discount} —Ä—É–±–ª–µ–π.\n"
        f"–ò—Ç–æ–≥–æ–≤–∞—è —Å—É–º–º–∞: {final_price} —Ä—É–±–ª–µ–π.\n\n"
        f"–ü–µ—Ä–µ–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –Ω–∞ –∫–∞—Ä—Ç—É: 89236950304 (–Ø–Ω–¥–µ–∫—Å –ë–∞–Ω–∫).\n"
        f"–ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —á–µ–∫ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏."
    )
    user_waiting_for_receipt[user_id] = True


# –û–±—Ä–∞–±–æ—Ç–∫–∞ —á–µ–∫–∞
async def handle_receipt(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.message.from_user.id
    user_name = update.message.from_user.first_name


    if user_id not in user_waiting_for_receipt:
        await update.message.reply_text("–Ø –Ω–µ –∂–¥—É —á–µ–∫ –æ—Ç –≤–∞—Å. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –ø–ª–∞—Ç–Ω—ã–π –∫—É—Ä—Å –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —á–µ–∫.")
        return


    if not update.message.photo:
        await update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ —á–µ–∫–∞.")
        return


    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —á–µ–∫ –≤ –≥—Ä—É–ø–ø—É
    await context.bot.send_message(
        chat_id=GROUP_ID,
        text=f"–ß–µ–∫ –æ—Ç {user_name} (ID: {user_id}). –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –æ–ø–ª–∞—Ç—É."
    )
    photo_file_id = update.message.photo[-1].file_id
    await context.bot.send_photo(
        chat_id=GROUP_ID,
        photo=photo_file_id,
        reply_markup=InlineKeyboardMarkup(
            [[InlineKeyboardButton("–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", callback_data=f"confirm_payment_{user_id}")]]
        )
    )


    await update.message.reply_text("–ß–µ–∫ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É. –û–∂–∏–¥–∞–π—Ç–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è.")


# –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–ø–ª–∞—Ç—ã
async def confirm_payment(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    user_id = int(query.data.split("_")[-1])
    user_status[user_id] = statuses[2]  # –ß–µ–º–ø–∏–æ–Ω
    del user_waiting_for_receipt[user_id]  # –û—á–∏—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ


    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    await context.bot.send_message(
        chat_id=user_id,
        text="–û–ø–ª–∞—Ç–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞! –í–∞–º –æ—Ç–∫—Ä—ã—Ç –¥–æ—Å—Ç—É–ø –∫ –ø–ª–∞—Ç–Ω–æ–º—É –∫—É—Ä—Å—É. üéâ"
    )


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ú–æ–π –∫–∞–±–∏–Ω–µ—Ç"
async def handle_my_cabinet(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    user_id = query.from_user.id
    score = user_scores.get(user_id, 0)
    status = user_status.get(user_id, statuses[0])


    try:
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è "–ú–æ–π –∫–∞–±–∏–Ω–µ—Ç" —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º (caption)
        caption = f"üë§ –í–∞—à –∫–∞–±–∏–Ω–µ—Ç:\n\n–°—Ç–∞—Ç—É—Å: {status}\n–ë–∞–ª–ª—ã: {score}\n–ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∞—Ç—å—Å—è, —á—Ç–æ–±—ã —É–ª—É—á—à–∏—Ç—å —Å—Ç–∞—Ç—É—Å –∏ –∑–∞—Ä–∞–±–æ—Ç–∞—Ç—å –±–æ–ª—å—à–µ –±–∞–ª–ª–æ–≤!"
        await context.bot.send_photo(
            chat_id=update.effective_chat.id,
            photo=open("https://github.com/boss198806/telegram-bot/blob/main/IMG_9695.PNG", 'rb'),
            caption=caption  # –≠—Ç–æ –æ–ø–∏—Å–∞–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –±—É–¥–µ—Ç –ø–æ–¥ —Ñ–æ—Ç–æ
        )
    except FileNotFoundError:
        logger.error(f"–§–∞–π–ª https://github.com/boss198806/telegram-bot/blob/main/IMG_9695.PNG.")
        await update.message.reply_text("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ /my_cabinet: {e}")
        await update.message.reply_text("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–û–±–æ –º–Ω–µ"
async def handle_about_me(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    try:
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è "–û–±–æ –º–Ω–µ" —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º (caption)
        caption = (
            "üë§ –û —Ç—Ä–µ–Ω–µ—Ä–µ:\n\n"
            "–ö—É—Ä–æ—á–∫–∏–Ω –ï–≤–≥–µ–Ω–∏–π –í–∏—Ç–∞–ª—å–µ–≤–∏—á\n"
            "–û–±—â–∏–π —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ—á–Ω—ã–π —Å—Ç–∞–∂ - 20 –ª–µ—Ç\n"
            "–°—Ç–∞–∂ —Ä–∞–±–æ—Ç—ã - 15 –ª–µ—Ç\n"
            "–ú–° - –ø–æ —Å—Ç–∞–Ω–æ–≤–æ–π —Ç—è–≥–µ\n"
            "–ú–° - –ø–æ –∂–∏–º—É —à—Ç–∞–Ω–≥–∏ –ª–µ–∂–∞\n"
            "–°—É–¥—å—è - —Ñ–µ–¥–µ—Ä–∞–ª—å–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏\n"
            "–û—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä —Å–æ—Ä–µ–≤–Ω–æ–≤–∞–Ω–∏–π\n"
            "–ö–ú–° - –ø–æ –±–æ–¥–∏–±–∏–ª–¥–∏–Ω–≥—É\n\n"
            "20 –ª–µ—Ç –≤ —Ñ–∏—Ç–Ω–µ—Å–µ!"
        )
        await context.bot.send_photo(
            chat_id=update.effective_chat.id,
            photo=open("https://github.com/boss198806/telegram-bot/blob/main/photo_2025.jpg", 'rb'),  # –§–æ—Ç–æ –¥–ª—è "–û–±–æ –º–Ω–µ" –≤ —Ñ–æ—Ä–º–∞—Ç–µ jpg
            caption=caption  # –≠—Ç–æ –æ–ø–∏—Å–∞–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –±—É–¥–µ—Ç –ø–æ–¥ —Ñ–æ—Ç–æ
        )
    except FileNotFoundError:
        logger.error(f"–§–∞–π–ª https://github.com/boss198806/telegram-bot/blob/main/photo_2025.jpg –Ω–µ –Ω–∞–π–¥–µ–Ω.")
        await update.message.reply_text("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ /about_me: {e}")
        await update.message.reply_text("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ö–∞–∫ –∑–∞—Ä–∞–±–æ—Ç–∞—Ç—å –±–∞–ª–ª—ã"
async def handle_earn_points(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query


    try:
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è "–ö–∞–∫ –∑–∞—Ä–∞–±–æ—Ç–∞—Ç—å –±–∞–ª–ª—ã" —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º (caption)
        caption = (
            "üí° –ö–∞–∫ –∑–∞—Ä–∞–±–æ—Ç–∞—Ç—å –±–∞–ª–ª—ã:\n\n"
            "1. –ü—Ä–æ—Ö–æ–¥–∏—Ç–µ –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –∫—É—Ä—Å –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–π—Ç–µ –≤–∏–¥–µ–æ-–æ—Ç—á–µ—Ç—ã.\n"
            "2. –£—á–∞—Å—Ç–≤—É–π—Ç–µ –≤ —á–µ–ª–ª–µ–Ω–¥–∂–∞—Ö –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–π—Ç–µ –≤–∏–¥–µ–æ-–æ—Ç—á–µ—Ç—ã.\n"
            "3. –ü—Ä–∏–≥–ª–∞—à–∞–π—Ç–µ –¥—Ä—É–∑–µ–π –∏ –ø–æ–ª—É—á–∞–µ—Ç–µ –±–∞–ª–ª—ã –∑–∞ –∏—Ö –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å.\n"
            "4. –ü–æ–∫—É–ø–∞–π—Ç–µ –ø–ª–∞—Ç–Ω—ã–π –∫—É—Ä—Å –∏ –ø–æ–ª—É—á–∞–µ—Ç–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –±–∞–ª–ª—ã."
        )
        await context.bot.send_photo(
            chat_id=update.effective_chat.id,
            photo=open("https://github.com/boss198806/telegram-bot/blob/main/IMG_9699.PNG", 'rb'),
            caption=caption  # –≠—Ç–æ –æ–ø–∏—Å–∞–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –±—É–¥–µ—Ç –ø–æ–¥ —Ñ–æ—Ç–æ
        )
    except FileNotFoundError:
        logger.error(f"–§–∞–π–ª https://github.com/boss198806/telegram-bot/blob/main/IMG_9699.PNG –Ω–µ –Ω–∞–π–¥–µ–Ω.")
        await update.message.reply_text("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ /earn_points: {e}")
        await update.message.reply_text("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")


   


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ö–∞–∫ –ø–æ—Ç—Ä–∞—Ç–∏—Ç—å –±–∞–ª–ª—ã"
async def handle_spend_points(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    user_id = query.from_user.id
    score = user_scores.get(user_id, 0)


    try:
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è "–ö–∞–∫ –ø–æ—Ç—Ä–∞—Ç–∏—Ç—å –±–∞–ª–ª—ã" —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º (caption)
        caption = (
            f"üí∞ –ö–∞–∫ –ø–æ—Ç—Ä–∞—Ç–∏—Ç—å –±–∞–ª–ª—ã:\n\n"
            f"–£ –≤–∞—Å –µ—Å—Ç—å {score} –±–∞–ª–ª–æ–≤.\n"
            "–í—ã –º–æ–∂–µ—Ç–µ –ø–æ—Ç—Ä–∞—Ç–∏—Ç—å –±–∞–ª–ª—ã –Ω–∞ —Å–∫–∏–¥–∫—É –ø—Ä–∏ –ø–æ–∫—É–ø–∫–µ –ø–ª–∞—Ç–Ω–æ–≥–æ –∫—É—Ä—Å–∞.\n"
            "1 –±–∞–ª–ª = 2 —Ä—É–±–ª—è —Å–∫–∏–¥–∫–∏.\n"
            "–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å–∫–∏–¥–∫–∞ - 600 —Ä—É–±–ª–µ–π."
        )
        await context.bot.send_photo(
            chat_id=update.effective_chat.id,
            photo=open("https://github.com/boss198806/telegram-bot/blob/main/IMG_9692.PNG", 'rb'),
            caption=caption  # –≠—Ç–æ –æ–ø–∏—Å–∞–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –±—É–¥–µ—Ç –ø–æ–¥ —Ñ–æ—Ç–æ
        )
    except FileNotFoundError:
        logger.error(f"–§–∞–π–ª https://github.com/boss198806/telegram-bot/blob/main/IMG_9692.PNG –Ω–µ –Ω–∞–π–¥–µ–Ω.")
        await update.message.reply_text("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ /spend_points: {e}")
        await update.message.reply_text("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")


# –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
def main():
    application = Application.builder().token(TOKEN).build()

    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥
    application.add_handler(CommandHandler("start", start))

    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–Ω–æ–ø–æ–∫
    application.add_handler(CallbackQueryHandler(handle_free_course, pattern="^free_course|next_day$"))
    application.add_handler(CallbackQueryHandler(handle_send_report, pattern=r"send_report_day_(\d+)"))
    application.add_handler(CallbackQueryHandler(handle_challenges, pattern="start_challenge"))
    application.add_handler(CallbackQueryHandler(buy_challenge, pattern="buy_challenge"))
    application.add_handler(CallbackQueryHandler(send_challenge_report, pattern="send_challenge_report"))
    application.add_handler(CallbackQueryHandler(handle_paid_course, pattern="paid_course"))
    application.add_handler(CallbackQueryHandler(confirm_payment, pattern="confirm_payment_.*"))
    application.add_handler(CallbackQueryHandler(handle_my_cabinet, pattern="my_cabinet"))
    application.add_handler(CallbackQueryHandler(handle_about_me, pattern="about_me"))
    application.add_handler(CallbackQueryHandler(handle_earn_points, pattern="earn_points"))
    application.add_handler(CallbackQueryHandler(handle_spend_points, pattern="spend_points"))
    application.add_handler(CallbackQueryHandler(handle_nutrition_menu, pattern="nutrition_menu"))

    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
    application.add_handler(MessageHandler(filters.VIDEO, handle_video))
    application.add_handler(MessageHandler(filters.PHOTO, handle_receipt))

    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ.")
    application.run_polling()


if __name__ == "__main__":
    main()

