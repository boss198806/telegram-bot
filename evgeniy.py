from telegram import Update, InlineKeyboardMarkup, InlineKeyboardButton
from telegram.ext import ContextTypes
from common import main_menu, get_report_button_text

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –Ω–∞—á–∞–ª–∞ –±–µ—Å–ø–ª–∞—Ç–Ω–æ–≥–æ –∫—É—Ä—Å–∞ –¥–ª—è –ï–≤–≥–µ–Ω–∏—è
async def start_free_course(msg, ctx: ContextTypes.DEFAULT_TYPE, user_id: int):
    """–ó–∞–ø—É—Å–∫ –±–µ—Å–ø–ª–∞—Ç–Ω–æ–≥–æ –∫—É—Ä—Å–∞ –¥–ª—è —Ç—Ä–µ–Ω–µ—Ä–∞ –ï–≤–≥–µ–Ω–∏—è."""
    if not (ctx.user_data[user_id].get("gender") == "female" and ctx.user_data[user_id].get("program") == "home"):
        return await msg.reply_text("–ü–æ–∫–∞ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ üöß", reply_markup=main_menu())
    
    day = ctx.user_data[user_id].get("current_day", 1)
    if day > 5:
        return await msg.reply_text("–í—ã –∑–∞–≤–µ—Ä—à–∏–ª–∏ –∫—É—Ä—Å! üéâ", reply_markup=main_menu())
    
    photos = {
        1: "https://github.com/boss198806/telegram-bot/blob/main/IMG_9647.PNG?raw=true",
        2: "https://github.com/boss198806/telegram-bot/blob/main/IMG_9648.PNG?raw=true",
        3: "https://github.com/boss198806/telegram-bot/blob/main/IMG_9649.PNG?raw=true",
        4: "https://github.com/boss198806/telegram-bot/blob/main/IMG_9650.PNG?raw=true",
        5: "https://github.com/boss198806/telegram-bot/blob/main/IMG_9651.PNG?raw=true",
    }

    course = {
        1: ["1Ô∏è‚É£ –ü—Ä–∏—Å–µ–¥ —Å –º–∞—Ö–æ–º 3x20 [–í–∏–¥–µ–æ](https://t.me/c/2241417709/363/364)"],
        2: ["1Ô∏è‚É£ –û—Ç–∂–∏–º–∞–Ω–∏—è –æ—Ç –ø–æ–ª–∞ 3x15 [–í–∏–¥–µ–æ](https://t.me/c/2241417709/167/168)"],
        3: ["1Ô∏è‚É£ –í—ã–ø–∞–¥—ã –Ω–∞–∑–∞–¥ 3x15 [–í–∏–¥–µ–æ](https://t.me/c/2241417709/155/156)"],
        4: ["1Ô∏è‚É£ –ü–æ–æ—á–µ—Ä–µ–¥–Ω—ã–µ –ø–æ–¥—ä–µ–º—ã —Å –≥–∞–Ω—Ç–µ–ª—è–º–∏ 4x20 [–í–∏–¥–µ–æ](https://t.me/c/2241417709/226/227)"],
        5: ["1Ô∏è‚É£ –ü—Ä–∏—Å–µ–¥ —Å–æ —à—Ç–∞–Ω–≥–æ–π (–±–µ–∑ —à—Ç–∞–Ω–≥–∏) 3x20 [–í–∏–¥–µ–æ](https://t.me/c/2241417709/140/141)"],
    }

    exercises = course.get(day, [])
    text = f"üî• **–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π –∫—É—Ä—Å: –î–µ–Ω—å {day}** üî•\n\n" + "\n".join(exercises) + "\n\n–û—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∏–¥–µ–æ-–æ—Ç—á–µ—Ç –∑–∞ –¥–µ–Ω—å! üé•"
    kb = InlineKeyboardMarkup([[InlineKeyboardButton(get_report_button_text(ctx, user_id), callback_data=f"send_report_day_{day}")]])

    try:
        await ctx.bot.send_photo(chat_id=msg.chat_id, photo=photos.get(day), caption=text, parse_mode="Markdown", reply_markup=kb)
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–æ—Ç–æ: {e}")
        await msg.reply_text("–û—à–∏–±–∫–∞: –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ. –ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –±–µ–∑ —Ñ–æ—Ç–æ.", reply_markup=kb)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç—á–µ—Ç–∞
async def handle_send_report(update: Update, ctx: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç—á–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –∑–∞ –¥–µ–Ω—å –≤ –±–µ—Å–ø–ª–∞—Ç–Ω–æ–º –∫—É—Ä—Å–µ."""
    query = update.callback_query
    user_id = query.from_user.id
    day = int(query.data.split("_")[-1])
    if user_reports_sent.get(user_id, {}).get(day):
        return await query.message.reply_text(f"–í—ã —É–∂–µ –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –æ—Ç—á–µ—Ç –∑–∞ –¥–µ–Ω—å {day}.")
    
    user_waiting_for_video[user_id] = day
    await query.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∏–¥–µ–æ-–æ—Ç—á–µ—Ç –∑–∞ —Ç–µ–∫—É—â–∏–π –¥–µ–Ω—å üé•")
