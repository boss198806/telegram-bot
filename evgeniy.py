import logging
from telegram import Update, InlineKeyboardMarkup, InlineKeyboardButton, Message
from telegram.ext import ContextTypes

logger = logging.getLogger(__name__)

# –ì–ª–æ–±–∞–ª—å–Ω—ã–µ —Å–ª–æ–≤–∞—Ä–∏
evgeniy_user_scores = {}
evgeniy_user_status = {}
evgeniy_user_reports_sent = {}
evgeniy_user_waiting_for_video = {}
evgeniy_user_challenges = {}
evgeniy_user_waiting_for_receipt = {}

statuses = ["–ù–æ–≤–∏—á–æ–∫", "–ë—ã–≤–∞–ª—ã–π", "–ß–µ–º–ø–∏–æ–Ω", "–ü—Ä–æ—Ñ–∏"]

GROUP_ID = os.getenv("GROUP_ID")  # –∏–ª–∏ –∏–º–ø–æ—Ä—Ç–∏—Ä—É–π—Ç–µ

######################
# –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ
######################
def get_score(user_id: int) -> int:
    return evgeniy_user_scores.get(user_id, 0)

def add_score(user_id: int, amount: int) -> None:
    evgeniy_user_scores[user_id] = evgeniy_user_scores.get(user_id, 0) + amount

def get_status(user_id: int) -> str:
    return evgeniy_user_status.get(user_id, statuses[0])

def set_status(user_id: int, new_status: str) -> None:
    evgeniy_user_status[user_id] = new_status

def evgeniy_main_menu() -> InlineKeyboardMarkup:
    keyboard = [
        [InlineKeyboardButton("üî• –ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π –∫—É—Ä—Å (–ï–í–ì–ï–ù–ò–ô)", callback_data="evgeniy_free_course")],
        [InlineKeyboardButton("üí™ –ß–µ–ª–ª–µ–Ω–¥–∂ (–ï–í–ì–ï–ù–ò–ô)", callback_data="evgeniy_challenge_menu")],
        [InlineKeyboardButton("üìö –ü–ª–∞—Ç–Ω—ã–π –∫—É—Ä—Å (–ï–í–ì–ï–ù–ò–ô)", callback_data="evgeniy_paid_course")],
        [InlineKeyboardButton("üë§ –ú–æ–π –∫–∞–±–∏–Ω–µ—Ç (–ï–í–ì–ï–ù–ò–ô)", callback_data="evgeniy_my_cabinet")],
        [InlineKeyboardButton("üí∞ –ö–∞–∫ –ø–æ—Ç—Ä–∞—Ç–∏—Ç—å –±–∞–ª–ª—ã (–ï–í–ì–ï–ù–ò–ô)", callback_data="evgeniy_spend_points")],
        [InlineKeyboardButton("üçΩ –ö–ë–ñ–£ (–ï–í–ì–ï–ù–ò–ô)", callback_data="evgeniy_kbju")],
        [InlineKeyboardButton("üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –≤—ã–±–æ—Ä—É —Ç—Ä–µ–Ω–µ—Ä–∞", callback_data="choose_instructor_back")]
    ]
    return InlineKeyboardMarkup(keyboard)

######################
# –ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π –∫—É—Ä—Å
######################
async def evgeniy_free_course(update: Update, ctx: ContextTypes.DEFAULT_TYPE) -> None:
    query = update.callback_query
    user_id = query.from_user.id
    await query.answer()

    # –õ–æ–≥–∏–∫–∞ –ø–æ—Ö–æ–∂–∞ –Ω–∞ anastasia_free_course, —Ç–æ–ª—å–∫–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º evgeniy_* —Å–ª–æ–≤–∞—Ä–∏
    # ...

async def evgeniy_send_report_callback(update: Update, ctx: ContextTypes.DEFAULT_TYPE) -> None:
    # –ê–Ω–∞–ª–æ–≥–∏—á–Ω–æ...
    ...

async def evgeniy_handle_video(update: Update, ctx: ContextTypes.DEFAULT_TYPE) -> None:
    # –ê–Ω–∞–ª–æ–≥–∏—á–Ω–æ...
    ...

######################
# –ß–µ–ª–ª–µ–Ω–¥–∂
######################
async def evgeniy_challenge_menu(update: Update, ctx: ContextTypes.DEFAULT_TYPE) -> None:
    # –ê–Ω–∞–ª–æ–≥–∏—á–Ω–æ...
    ...

async def evgeniy_buy_challenge(update: Update, ctx: ContextTypes.DEFAULT_TYPE) -> None:
    # –ê–Ω–∞–ª–æ–≥–∏—á–Ω–æ...
    ...

async def evgeniy_challenge_next_day(update: Update, ctx: ContextTypes.DEFAULT_TYPE) -> None:
    # –ê–Ω–∞–ª–æ–≥–∏—á–Ω–æ...
    ...

######################
# –ü–ª–∞—Ç–Ω—ã–π –∫—É—Ä—Å
######################
async def evgeniy_paid_course(update: Update, ctx: ContextTypes.DEFAULT_TYPE) -> None:
    # –ê–Ω–∞–ª–æ–≥–∏—á–Ω–æ...
    ...

async def evgeniy_send_receipt(update: Update, ctx: ContextTypes.DEFAULT_TYPE) -> None:
    # –ê–Ω–∞–ª–æ–≥–∏—á–Ω–æ...
    ...

async def evgeniy_handle_receipt(update: Update, ctx: ContextTypes.DEFAULT_TYPE) -> None:
    # –ê–Ω–∞–ª–æ–≥–∏—á–Ω–æ...
    ...

async def evgeniy_confirm_payment(update: Update, ctx: ContextTypes.DEFAULT_TYPE) -> None:
    # –ê–Ω–∞–ª–æ–≥–∏—á–Ω–æ...
    ...

async def evgeniy_send_paid_report(update: Update, ctx: ContextTypes.DEFAULT_TYPE) -> None:
    # –ê–Ω–∞–ª–æ–≥–∏—á–Ω–æ...
    ...

async def evgeniy_paid_next_day(update: Update, ctx: ContextTypes.DEFAULT_TYPE) -> None:
    # –ê–Ω–∞–ª–æ–≥–∏—á–Ω–æ...
    ...

######################
# –ú–æ–π –∫–∞–±–∏–Ω–µ—Ç
######################
async def evgeniy_my_cabinet(update: Update, ctx: ContextTypes.DEFAULT_TYPE) -> None:
    query = update.callback_query
    user_id = query.from_user.id
    await query.answer()

    score = get_score(user_id)
    status = get_status(user_id)
    text = f"–í–∞—à –∫–∞–±–∏–Ω–µ—Ç (–ï–≤–≥–µ–Ω–∏–π)\n–°—Ç–∞—Ç—É—Å: {status}\n–ë–∞–ª–ª—ã: {score}"
    await query.message.reply_text(text, reply_markup=evgeniy_main_menu())

######################
# –ü–æ—Ç—Ä–∞—Ç–∏—Ç—å –±–∞–ª–ª—ã
######################
async def evgeniy_spend_points(update: Update, ctx: ContextTypes.DEFAULT_TYPE) -> None:
    query = update.callback_query
    user_id = query.from_user.id
    await query.answer()

    score = get_score(user_id)
    text = f"–ö–∞–∫ –ø–æ—Ç—Ä–∞—Ç–∏—Ç—å –±–∞–ª–ª—ã (–ï–≤–≥–µ–Ω–∏–π)? –£ –≤–∞—Å {score} –±–∞–ª–ª–æ–≤..."
    await query.message.reply_text(text, reply_markup=evgeniy_main_menu())

######################
# –ö–ë–ñ–£
######################
async def evgeniy_kbju_start(update: Update, ctx: ContextTypes.DEFAULT_TYPE) -> None:
    query = update.callback_query
    user_id = query.from_user.id
    await query.answer()

    ctx.user_data[user_id]["evgeniy_kbju_step"] = "gender"
    await query.message.reply_text("–í–≤–µ–¥–∏—Ç–µ –ø–æ–ª (–º/–∂) [–ï–≤–≥–µ–Ω–∏–π]:")

async def evgeniy_handle_kbju_text(update: Update, ctx: ContextTypes.DEFAULT_TYPE) -> None:
    user_id = update.message.from_user.id
    if "evgeniy_kbju_step" not in ctx.user_data[user_id]:
        return
    # –ê–Ω–∞–ª–æ–≥–∏—á–Ω–∞—è –ª–æ–≥–∏–∫–∞
    ...

######################
# –ù–∞–∑–∞–¥
######################
async def evgeniy_back_to_menu(update: Update, ctx: ContextTypes.DEFAULT_TYPE) -> None:
    query = update.callback_query
    await query.answer()
    await query.message.reply_text("–ú–µ–Ω—é –ï–≤–≥–µ–Ω–∏—è", reply_markup=evgeniy_main_menu())
